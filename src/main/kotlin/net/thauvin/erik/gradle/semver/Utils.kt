package net.thauvin.erik.gradle.semver

import org.gradle.api.GradleException
import java.io.File
import java.io.FileInputStream
import java.io.FileOutputStream
import java.util.Properties

/**
 * The <code>Utils</code> class.
 *
 * @author <a href="https://erik.thauvin.net/" target="_blank">Erik C. Thauvin</a>
 * @created 2019-04-10
 * @since 1.0
 */
object Utils {
    fun hasEnv(keys: Set<String>): Boolean {
        keys.forEach {
            if (System.getProperties().containsKey(it)) return true
        }
        return false
    }

    fun loadProperty(props: Properties, key: String, default: String): String {
        return System.getProperty(key, props.getProperty(key, default))
    }

    fun saveProperties(config: SemverConfig, version: Version) {
        val propsFile = File(config.properties)
        SortedProperties().apply {
            propsFile.apply {
                if (canRead() && isFile) {
                    FileInputStream(this).reader().use { load(it) }
                }
            }

            put(config.majorKey, version.major)
            put(config.minorKey, version.minor)
            put(config.patchKey, version.patch)
            put(config.preReleaseKey, version.preRelease)
            put(config.buildMetaKey, version.buildMeta)
            if (version.buildMetaPrefix != Version.DEFAULT_BUILDMETA_PREFIX ||
                containsKey(config.buildMetaPrefixKey))
                put(config.buildMetaPrefixKey, version.buildMetaPrefix)
            if (version.preReleasePrefix != Version.DEFAULT_PRERELEASE_PREFIX ||
                containsKey(config.preReleasePrefixKey))
                put(config.preReleasePrefixKey, version.preReleasePrefix)
            if (version.separator != Version.DEFAULT_SEPARATOR || containsKey(config.separatorKey))
                put(config.separatorKey, version.separator)

            propsFile.apply {
                if (!exists()) {
                    // Need to create the file as canWrite() will not work unless the file exists
                    createNewFile()
                }
                if (canWrite()) {
                    FileOutputStream(this).writer().use {
                        store(it, "Generated by the Semver Plugin for Gradle")
                    }
                } else {
                    throw GradleException("Unable to write version to: `$absoluteFile`")
                }
            }
        }
    }
}
